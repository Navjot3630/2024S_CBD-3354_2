steps:
  # Build Docker image for the frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/project897927/frontend:$SHORT_SHA', './frontend']

  # Build Docker image for the backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/project897927/backend:$SHORT_SHA', './backend']

  # Push the frontend image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/project897927/frontend:$SHORT_SHA']

  # Push the backend image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/project897927/backend:$SHORT_SHA']

  # Set up the GKE cluster in Autopilot mode
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'create-auto'
      - 'cluster897927'  # Replace with your desired cluster name
      - '--region=us-central1-a'    # Replace with your desired region
    waitFor:
      - '-'



  # Deploy the frontend application to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster897927'

  # Deploy the backend application to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=897927cluster'

  # Expose the frontend deployment with a service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=897927cluster'

  # Expose the backend deployment with a service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster897927'

images:
  - 'gcr.io/project897927/frontend:$SHORT_SHA'
  - 'gcr.io/project897927/backend:$SHORT_SHA'
  
